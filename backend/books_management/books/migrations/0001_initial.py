# Generated by Django 4.2 on 2024-04-18 10:49

import books.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="book name",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Zа-яА-ЯёЁ0-9 _'\\\"()\\-]+$"
                            )
                        ],
                        verbose_name="book name",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="book title",
                        max_length=30,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Zа-яА-ЯёЁ0-9 _'\\\"()<>[\\]-]+$"
                            )
                        ],
                        verbose_name="book title",
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        help_text="book author",
                        max_length=30,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Zа-яА-ЯёЁ \\-]+$"
                            )
                        ],
                        verbose_name="book author",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="book description",
                        max_length=512,
                        verbose_name="book description",
                    ),
                ),
                (
                    "price",
                    models.PositiveIntegerField(
                        help_text="book price",
                        validators=[books.validators.IntegerValidator(max_digits=5)],
                        verbose_name="book price",
                    ),
                ),
            ],
            options={
                "verbose_name": "book",
                "verbose_name_plural": "books",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "column_name",
                    models.CharField(
                        choices=[
                            ("name", "name"),
                            ("title", "title"),
                            ("author", "author"),
                            ("description", "description"),
                            ("price", "price"),
                        ],
                        unique=True,
                        verbose_name="name of column",
                    ),
                ),
                (
                    "is_visible",
                    models.BooleanField(verbose_name="visible status of column"),
                ),
            ],
            options={
                "verbose_name": "profile",
                "verbose_name_plural": "profilies",
                "ordering": ("id",),
            },
        ),
    ]
